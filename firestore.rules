rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an administrator.
    function isAdmin() {
      // Check if a document for the user's UID exists in the 'roles_admin' collection.
      return request.auth != null && exists(/databases/$(database)/documents/roles_admin/$(request.auth.uid));
    }

    // Rules for all content collections (Services, Projects, etc.)
    // These collections are publicly readable but only writable by administrators.
    match /{collection}/{docId} 
    where collection in ['services', 'projects', 'articles', 'gallery', 'events', 'jobs'] {
      // Allow public read access (get and list) for website pages.
      allow get, list: if true;
      // Allow write access (create, update, delete) only for admins.
      allow write: if isAdmin();
    }

    // Special rules for the testimonials collection.
    match /testimonials/{testimonialId} {
      // Allow anyone to create (submit) feedback.
      allow create: if true;
      // Allow public read of individual testimonials if needed, and allow admins to list, update, and delete.
      allow read, update, delete: if isAdmin();
    }
    
    // The roles_admin collection is only readable and writable by other admins.
    // This prevents non-admins from making themselves an admin.
    match /roles_admin/{userId} {
      allow read, write: if isAdmin();
    }
  }
}