rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin.
    // An admin is defined by the existence of a document in the 'roles_admin' collection
    // with the user's UID as the document ID.
    function isAdmin() {
      return exists(/databases/$(database)/documents/roles_admin/$(request.auth.uid));
    }

    // Secure all collections by default.
    // No one can read or write to any collection unless explicitly allowed.
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow public read access for all content-based collections.
    // This is necessary for the public-facing pages of the website.
    match /services/{serviceId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /projects/{projectId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /articles/{articleId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /gallery/{galleryItemId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /events/{eventId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /jobs/{jobId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // The testimonials collection has special rules:
    // - Anyone can read existing testimonials.
    // - Anyone (even unauthenticated users) can create (submit) a new testimonial.
    // - Only admins can update or delete testimonials.
    match /testimonials/{testimonialId} {
      allow read: if true;
      allow create: if true;
      allow update, delete: if isAdmin();
    }

    // Admin roles collection is only readable by admins to prevent listing of other admins.
    // Writes would be done via the Firebase Console for security.
    match /roles_admin/{userId} {
        allow read, write: if isAdmin();
    }
  }
}