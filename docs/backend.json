{
  "entities": {
    "Service": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Service",
      "type": "object",
      "description": "Represents a service offered by AISolutions Hub.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the service."
        },
        "title": {
          "type": "string",
          "description": "Title of the service."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the service."
        },
        "icon": {
          "type": "string",
          "description": "Icon associated with the service."
        },
        "keyBenefits": {
          "type": "array",
          "description": "Key benefits of the service.",
          "items": {
            "type": "string"
          }
        },
        "startingPrice": {
          "type": "number",
          "description": "Starting price of the service."
        }
      },
      "required": [
        "id",
        "title",
        "description",
        "icon",
        "keyBenefits",
        "startingPrice"
      ]
    },
    "Project": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Project",
      "type": "object",
      "description": "Represents a project in the AISolutions Hub portfolio.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the project."
        },
        "title": {
          "type": "string",
          "description": "Title of the project."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the project."
        },
        "image": {
          "type": "string",
          "description": "URL of the project image."
        },
        "technologies": {
          "type": "array",
          "description": "Technologies used in the project.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "title",
        "description",
        "image",
        "technologies"
      ]
    },
    "Article": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Article",
      "type": "object",
      "description": "Represents a blog article.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the article."
        },
        "title": {
          "type": "string",
          "description": "Title of the article."
        },
        "excerpt": {
          "type": "string",
          "description": "Brief excerpt or summary of the article."
        },
        "image": {
          "type": "string",
          "description": "URL of the article image."
        },
        "publicationDate": {
          "type": "string",
          "description": "Date when the article was published.",
          "format": "date-time"
        },
        "content": {
          "type": "string",
          "description": "Full content of the article."
        }
      },
      "required": [
        "id",
        "title",
        "excerpt",
        "image",
        "publicationDate",
        "content"
      ]
    },
    "GalleryItem": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "GalleryItem",
      "type": "object",
      "description": "Represents an image in the gallery.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the gallery item."
        },
        "imageUrl": {
          "type": "string",
          "description": "URL of the image."
        },
        "description": {
          "type": "string",
          "description": "Description of the image."
        }
      },
      "required": [
        "id",
        "imageUrl",
        "description"
      ]
    },
    "Event": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Event",
      "type": "object",
      "description": "Represents a company event.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the event."
        },
        "date": {
          "type": "string",
          "description": "Date and time of the event.",
          "format": "date-time"
        },
        "location": {
          "type": "string",
          "description": "Location of the event."
        },
        "description": {
          "type": "string",
          "description": "Description of the event."
        }
      },
      "required": [
        "id",
        "date",
        "location",
        "description"
      ]
    },
    "Career": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Career",
      "type": "object",
      "description": "Represents an open job position.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the career."
        },
        "title": {
          "type": "string",
          "description": "Title of the job position."
        },
        "description": {
          "type": "string",
          "description": "Description of the job responsibilities and requirements."
        }
      },
      "required": [
        "id",
        "title",
        "description"
      ]
    },
    "Feedback": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Feedback",
      "type": "object",
      "description": "Represents user feedback and ratings.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the feedback."
        },
        "name": {
          "type": "string",
          "description": "Name of the user submitting the feedback."
        },
        "company": {
          "type": "string",
          "description": "Company of the user submitting the feedback."
        },
        "rating": {
          "type": "number",
          "description": "Rating provided by the user."
        },
        "feedback": {
          "type": "string",
          "description": "Comment provided by the user."
        },
         "createdAt": {
          "type": "string",
          "description": "Timestamp when the feedback was submitted.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "name",
        "company",
        "rating",
        "feedback",
        "createdAt"
      ]
    },
    "Contact": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Contact",
      "type": "object",
      "description": "Represents a contact form submission.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the contact inquiry."
        },
        "fullName": {
          "type": "string",
          "description": "Full name of the person."
        },
        "email": {
          "type": "string",
          "description": "Email address of the person.",
          "format": "email"
        },
        "companyName": {
          "type": "string",
          "description": "Company name of the person."
        },
        "country": {
          "type": "string",
          "description": "Country of the person."
        },
        "contactNumber": {
          "type": "string",
          "description": "Contact number (optional)."
        },
        "message": {
          "type": "string",
          "description": "The message sent by the person."
        },
        "submittedAt": {
          "type": "string",
          "description": "Timestamp when the inquiry was submitted.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "fullName",
        "email",
        "companyName",
        "country",
        "message",
        "submittedAt"
      ]
    },
    "HomepageSection": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "HomepageSection",
      "type": "object",
      "description": "Configuration for a section displayed on the homepage.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the homepage section."
        },
        "sectionType": {
          "type": "string",
          "description": "Type of section (e.g., 'services', 'projects', 'blog', 'gallery', 'events')."
        },
        "featuredItemIds": {
          "type": "array",
          "description": "Array of IDs for featured items in this section, referencing other entities.",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string",
          "description": "Title of the homepage section."
        },
        "order": {
          "type": "number",
          "description": "The order in which the section is displayed on the homepage."
        }
      },
      "required": [
        "id",
        "sectionType",
        "featuredItemIds",
        "title",
        "order"
      ]
    },
    "AdminUser": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AdminUser",
      "type": "object",
      "description": "Represents an admin user with access to the administration dashboard.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the admin user."
        },
        "username": {
          "type": "string",
          "description": "Username of the admin user."
        },
        "email": {
          "type": "string",
          "description": "Email address of the admin user.",
          "format": "email"
        },
        "roles": {
          "type": "array",
          "description": "Roles of the admin user (e.g., 'administrator', 'editor').",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "username",
        "email",
        "roles"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/services/{serviceId}",
        "definition": {
          "entityName": "Service",
          "schema": {
            "$ref": "#/backend/entities/Service"
          },
          "description": "Stores service details.  Admin access controlled via /roles_admin/{uid}.",
          "params": [
            {
              "name": "serviceId",
              "description": "Unique identifier for the service."
            }
          ]
        }
      },
      {
        "path": "/projects/{projectId}",
        "definition": {
          "entityName": "Project",
          "schema": {
            "$ref": "#/backend/entities/Project"
          },
          "description": "Stores project details. Admin access controlled via /roles_admin/{uid}.",
          "params": [
            {
              "name": "projectId",
              "description": "Unique identifier for the project."
            }
          ]
        }
      },
      {
        "path": "/articles/{articleId}",
        "definition": {
          "entityName": "Article",
          "schema": {
            "$ref": "#/backend/entities/Article"
          },
          "description": "Stores blog article details. Admin access controlled via /roles_admin/{uid}.",
          "params": [
            {
              "name": "articleId",
              "description": "Unique identifier for the article."
            }
          ]
        }
      },
      {
        "path": "/gallery/{galleryItemId}",
        "definition": {
          "entityName": "GalleryItem",
          "schema": {
            "$ref": "#/backend/entities/GalleryItem"
          },
          "description": "Stores gallery item details.  Admin access controlled via /roles_admin/{uid}.",
          "params": [
            {
              "name": "galleryItemId",
              "description": "Unique identifier for the gallery item."
            }
          ]
        }
      },
      {
        "path": "/events/{eventId}",
        "definition": {
          "entityName": "Event",
          "schema": {
            "$ref": "#/backend/entities/Event"
          },
          "description": "Stores event details. Admin access controlled via /roles_admin/{uid}.",
          "params": [
            {
              "name": "eventId",
              "description": "Unique identifier for the event."
            }
          ]
        }
      },
      {
        "path": "/careers/{careerId}",
        "definition": {
          "entityName": "Career",
          "schema": {
            "$ref": "#/backend/entities/Career"
          },
          "description": "Stores career details. Admin access controlled via /roles_admin/{uid}.",
          "params": [
            {
              "name": "careerId",
              "description": "Unique identifier for the career."
            }
          ]
        }
      },
      {
        "path": "/testimonials/{testimonialId}",
        "definition": {
          "entityName": "Feedback",
          "schema": {
            "$ref": "#/backend/entities/Feedback"
          },
          "description": "Stores user testimonials. Admin access controlled via /roles_admin/{uid}.",
          "params": [
            {
              "name": "testimonialId",
              "description": "Unique identifier for the feedback."
            }
          ]
        }
      },
       {
        "path": "/contacts/{contactId}",
        "definition": {
          "entityName": "Contact",
          "schema": {
            "$ref": "#/backend/entities/Contact"
          },
          "description": "Stores contact form submissions. Admin access controlled via /roles_admin/{uid}.",
          "params": [
            {
              "name": "contactId",
              "description": "Unique identifier for the contact inquiry."
            }
          ]
        }
      },
      {
        "path": "/homepageSections/{homepageSectionId}",
        "definition": {
          "entityName": "HomepageSection",
          "schema": {
            "$ref": "#/backend/entities/HomepageSection"
          },
          "description": "Stores configuration for homepage sections. Admin access controlled via /roles_admin/{uid}.",
          "params": [
            {
              "name": "homepageSectionId",
              "description": "Unique identifier for the homepage section."
            }
          ]
        }
      },
      {
        "path": "/roles_admin/{userId}",
        "definition": {
          "entityName": "AdminUser",
          "schema": {
            "$ref": "#/backend/entities/AdminUser"
          },
          "description": "Marks a user as an admin. Existence of document grants admin privileges.",
          "params": [
            {
              "name": "userId",
              "description": "User ID of the admin."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to ensure security, scalability, and ease of debugging. All top-level collections are intended for public read access, with write access restricted to administrators. The `/testimonials` collection allows any user to create a document (submit feedback), but only admins can modify or delete documents. The `/contacts` collection allows any user to create a document (submit an inquiry), with read and delete access restricted to admins. Admin privileges are managed through the existence of a document in the `/roles_admin/{uid}` collection."
  }
}
